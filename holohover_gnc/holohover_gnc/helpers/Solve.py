from qpsolvers import solve_qp
import numpy as np

P = np.array([[1., 0., 0., 0., 0., 0.],
       [0., 1., 0., 0., 0., 0.],
       [0., 0., 1., 0., 0., 0.],
       [0., 0., 0., 1., 0., 0.],
       [0., 0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 0., 1.]])
       
q = np.array([0., 0., 0., 0., 0., 0.])
 
G = np.array([[1., 0., 0., 0., 0., 0.],
       [0., 1., 0., 0., 0., 0.],
       [0., 0., 1., 0., 0., 0.],
       [0., 0., 0., 1., 0., 0.],
       [0., 0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 0., 1.]])
       
h = np.array([100., 100., 100., 100., 100., 100.])
 
A = np.array([[ 0.4115823 , -0.4115823 , -0.99506297,  0.99506297,  0.58348067,
        -0.58348067],
       [ 0.9113726 , -0.9113726 , -0.09924557,  0.09924557, -0.81212702,
         0.81212702],
       [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
         0.        ],
       [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
         0.        ],
       [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
         0.        ],
       [-0.1       ,  0.1       ,  0.06732051, -0.03267949,  0.03267949,
        -0.06732051]])
        
#b = np.array([-3.94254311e+10,  2.19112146e+12,  0.00000000e+00,  0.00000000e+00,
#        0.00000000e+00,  3.68621833e+01])

b =  np.array([0.,  0.,  0.,  0.,
        0.,  0.])      
lb = np.array([0., 0., 0., 0., 0., 0.])

T = solve_qp(P,q,G,h,A,b,lb)